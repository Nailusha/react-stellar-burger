{"ast":null,"code":"import{fetchIngredients}from\"./ingredientQuery\";import{createSlice}from\"@reduxjs/toolkit\";var initialState={ingredients:[],isLoding:false,error:\" \"};var burgerIngredientsSlice=createSlice({name:\"ingredients\",initialState:initialState,extraReducers:function extraReducers(builder){builder// Add reducers for additional action types here, and handle loading state as needed\n.addCase(fetchIngredients.pending.type,function(state){state.isLoding=false;state.error=\" \";}).addCase(fetchIngredients.fulfilled.type,function(state,action){state.isLoding=true;state.error=\" \";state.ingredients=action.payload.data;}).addCase(fetchIngredients.rejected.type,function(state,action){state.isLoding=false;state.error=action.payload;});}});var _burgerIngredientsSli=burgerIngredientsSlice.actions,ingredientsUploading=_burgerIngredientsSli.ingredientsUploading,ingredientsUpload=_burgerIngredientsSli.ingredientsUpload,ingredientsUploadError=_burgerIngredientsSli.ingredientsUploadError;export{ingredientsUploading,ingredientsUpload,ingredientsUploadError};export default burgerIngredientsSlice.reducer;","map":{"version":3,"names":["fetchIngredients","createSlice","initialState","ingredients","isLoding","error","burgerIngredientsSlice","name","extraReducers","builder","addCase","pending","type","state","fulfilled","action","payload","data","rejected","_burgerIngredientsSli","actions","ingredientsUploading","ingredientsUpload","ingredientsUploadError","reducer"],"sources":["C:/Users/Nailusha/Desktop/yandex-dev/react-stellar-burger/src/components/services/store/reducers/burgerIngredientsSlice.js"],"sourcesContent":["import { fetchIngredients } from \"./ingredientQuery\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  ingredients: [],\r\n  isLoding: false,\r\n  error: \" \",\r\n};\r\n\r\nconst burgerIngredientsSlice = createSlice({\r\n  name: \"ingredients\",\r\n  initialState,\r\n  \r\n\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Add reducers for additional action types here, and handle loading state as needed\r\n      .addCase(fetchIngredients.pending.type, (state) => {\r\n        state.isLoding = false;\r\n        state.error = \" \";\r\n      })\r\n\r\n      .addCase(fetchIngredients.fulfilled.type, (state, action) => {\r\n        state.isLoding = true;\r\n        state.error = \" \";\r\n        state.ingredients = action.payload.data;\r\n      })\r\n\r\n      .addCase(fetchIngredients.rejected.type, (state, action) => {\r\n        state.isLoding = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const {\r\n  ingredientsUploading,\r\n  ingredientsUpload,\r\n  ingredientsUploadError,\r\n} = burgerIngredientsSlice.actions;\r\nexport default burgerIngredientsSlice.reducer;"],"mappings":"AAAA,OAASA,gBAAgB,KAAQ,mBAAmB,CACpD,OAASC,WAAW,KAAQ,kBAAkB,CAE9C,GAAM,CAAAC,YAAY,CAAG,CACnBC,WAAW,CAAE,EAAE,CACfC,QAAQ,CAAE,KAAK,CACfC,KAAK,CAAE,GACT,CAAC,CAED,GAAM,CAAAC,sBAAsB,CAAGL,WAAW,CAAC,CACzCM,IAAI,CAAE,aAAa,CACnBL,YAAY,CAAZA,YAAY,CAGZM,aAAa,CAAE,SAAAA,cAACC,OAAO,CAAK,CAC1BA,OACE;AAAA,CACCC,OAAO,CAACV,gBAAgB,CAACW,OAAO,CAACC,IAAI,CAAE,SAACC,KAAK,CAAK,CACjDA,KAAK,CAACT,QAAQ,CAAG,KAAK,CACtBS,KAAK,CAACR,KAAK,CAAG,GAAG,CACnB,CAAC,CAAC,CAEDK,OAAO,CAACV,gBAAgB,CAACc,SAAS,CAACF,IAAI,CAAE,SAACC,KAAK,CAAEE,MAAM,CAAK,CAC3DF,KAAK,CAACT,QAAQ,CAAG,IAAI,CACrBS,KAAK,CAACR,KAAK,CAAG,GAAG,CACjBQ,KAAK,CAACV,WAAW,CAAGY,MAAM,CAACC,OAAO,CAACC,IAAI,CACzC,CAAC,CAAC,CAEDP,OAAO,CAACV,gBAAgB,CAACkB,QAAQ,CAACN,IAAI,CAAE,SAACC,KAAK,CAAEE,MAAM,CAAK,CAC1DF,KAAK,CAACT,QAAQ,CAAG,KAAK,CACtBS,KAAK,CAACR,KAAK,CAAGU,MAAM,CAACC,OAAO,CAC9B,CAAC,CAAC,CACN,CACF,CAAC,CAAC,CAEK,IAAAG,qBAAA,CAIHb,sBAAsB,CAACc,OAAO,CAHhCC,oBAAoB,CAAAF,qBAAA,CAApBE,oBAAoB,CACpBC,iBAAiB,CAAAH,qBAAA,CAAjBG,iBAAiB,CACjBC,sBAAsB,CAAAJ,qBAAA,CAAtBI,sBAAsB,CACW,OAAAF,oBAAA,CAAAC,iBAAA,CAAAC,sBAAA,EACnC,cAAe,CAAAjB,sBAAsB,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}