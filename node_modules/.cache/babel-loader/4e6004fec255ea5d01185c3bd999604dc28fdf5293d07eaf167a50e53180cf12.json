{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nailusha\\\\Desktop\\\\yandex-dev\\\\react-stellar-burger\\\\src\\\\components\\\\protected-route\\\\protected-route.tsx\",\n  _s = $RefreshSig$();\nimport { Navigate, useLocation } from \"react-router-dom\";\nimport React, { useEffect } from \"react\";\nimport { setAuthChecked } from \"../../services/store/reducers/userAuthSlice\";\nimport { checkUserAuth } from \"../../utils/api\";\nimport Preloader from \"../preloder/preloder\";\nimport { useAppDispatch, useAppSelector } from \"../../services/hooks/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Protected = _ref => {\n  _s();\n  let {\n    onlyUnAuth = false,\n    component\n  } = _ref;\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(setAuthChecked(false));\n    dispatch(checkUserAuth());\n  }, [dispatch]);\n  const isAuthChecked = useAppSelector(store => store.userStatus.isAuthChecked);\n  const user = useAppSelector(store => store.userStatus.user);\n  const location = useLocation();\n  if (!isAuthChecked) {\n    // Запрос еще выполняется\n    return /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this); // или прелоадер\n  }\n\n  if (onlyUnAuth && user) {\n    // Пользователь авторизован, но запрос предназначен только для неавторизованных пользователей\n    // Нужно сделать редирект на главную страницу или на тот адрес, что записан в location.state.from\n    const {\n      from\n    } = location.state || {\n      from: {\n        pathname: \"/\"\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: from\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  if (!onlyUnAuth && !user) {\n    // Сервер не ответил\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n\n  // !onlyUnAuth && user\n  return component;\n};\n_s(Protected, \"aimqedsGYBOrStxxk3xTJ9VZCxw=\", false, function () {\n  return [useAppDispatch, useAppSelector, useAppSelector, useLocation];\n});\n_c = Protected;\nexport const OnlyAuth = props => /*#__PURE__*/_jsxDEV(Protected, {\n  onlyUnAuth: false,\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 48,\n  columnNumber: 41\n}, this);\n_c2 = OnlyAuth;\nexport const OnlyUnAuth = props => /*#__PURE__*/_jsxDEV(Protected, {\n  onlyUnAuth: true,\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 49,\n  columnNumber: 43\n}, this);\n_c3 = OnlyUnAuth;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Protected\");\n$RefreshReg$(_c2, \"OnlyAuth\");\n$RefreshReg$(_c3, \"OnlyUnAuth\");","map":{"version":3,"names":["Navigate","useLocation","React","useEffect","setAuthChecked","checkUserAuth","Preloader","useAppDispatch","useAppSelector","jsxDEV","_jsxDEV","Protected","_ref","_s","onlyUnAuth","component","dispatch","isAuthChecked","store","userStatus","user","location","fileName","_jsxFileName","lineNumber","columnNumber","from","state","pathname","to","_c","OnlyAuth","props","_c2","OnlyUnAuth","_c3","$RefreshReg$"],"sources":["C:/Users/Nailusha/Desktop/yandex-dev/react-stellar-burger/src/components/protected-route/protected-route.tsx"],"sourcesContent":["import { Navigate, useLocation } from \"react-router-dom\";\r\nimport React, { useEffect } from \"react\";\r\nimport { setAuthChecked } from \"../../services/store/reducers/userAuthSlice\";\r\nimport { checkUserAuth } from \"../../utils/api\";\r\nimport Preloader from \"../preloder/preloder\";\r\nimport { useAppDispatch, useAppSelector } from \"../../services/hooks/hooks\";\r\nimport { ReactElement } from \"react\";\r\n\r\nconst Protected = ({\r\n  onlyUnAuth = false,\r\n  component,\r\n}: {\r\n  onlyUnAuth: boolean;\r\n  component: ReactElement; // Type the component prop as ReactElement\r\n}): ReactElement => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(setAuthChecked(false));\r\n    dispatch(checkUserAuth());\r\n  }, [dispatch]);\r\n\r\n  const isAuthChecked = useAppSelector((store) => store.userStatus.isAuthChecked);\r\n  const user = useAppSelector((store) => store.userStatus.user);\r\n  const location = useLocation();\r\n\r\n  if (!isAuthChecked) {\r\n    // Запрос еще выполняется\r\n    return <Preloader />; // или прелоадер\r\n  }\r\n\r\n  if (onlyUnAuth && user) {\r\n    // Пользователь авторизован, но запрос предназначен только для неавторизованных пользователей\r\n    // Нужно сделать редирект на главную страницу или на тот адрес, что записан в location.state.from\r\n    const { from } = location.state || { from: { pathname: \"/\" } };\r\n    return <Navigate to={from} />;\r\n  }\r\n\r\n  if (!onlyUnAuth && !user) {\r\n    // Сервер не ответил\r\n    return <Navigate to=\"/login\" state={{ from: location }} />;\r\n  }\r\n\r\n  // !onlyUnAuth && user\r\n  return component;\r\n};\r\n\r\nexport const OnlyAuth = (props: any) => <Protected onlyUnAuth={false} {...props} />;\r\nexport const OnlyUnAuth = (props: any) => <Protected onlyUnAuth={true} {...props} />;\r\n\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,cAAc,QAAQ,6CAA6C;AAC5E,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,SAASC,cAAc,EAAEC,cAAc,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5E,MAAMC,SAAS,GAAGC,IAAA,IAME;EAAAC,EAAA;EAAA,IAND;IACjBC,UAAU,GAAG,KAAK;IAClBC;EAIF,CAAC,GAAAH,IAAA;EACC,MAAMI,QAAQ,GAAGT,cAAc,EAAE;EAEjCJ,SAAS,CAAC,MAAM;IACda,QAAQ,CAACZ,cAAc,CAAC,KAAK,CAAC,CAAC;IAC/BY,QAAQ,CAACX,aAAa,EAAE,CAAC;EAC3B,CAAC,EAAE,CAACW,QAAQ,CAAC,CAAC;EAEd,MAAMC,aAAa,GAAGT,cAAc,CAAEU,KAAK,IAAKA,KAAK,CAACC,UAAU,CAACF,aAAa,CAAC;EAC/E,MAAMG,IAAI,GAAGZ,cAAc,CAAEU,KAAK,IAAKA,KAAK,CAACC,UAAU,CAACC,IAAI,CAAC;EAC7D,MAAMC,QAAQ,GAAGpB,WAAW,EAAE;EAE9B,IAAI,CAACgB,aAAa,EAAE;IAClB;IACA,oBAAOP,OAAA,CAACJ,SAAS;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,CAAC,CAAC;EACxB;;EAEA,IAAIX,UAAU,IAAIM,IAAI,EAAE;IACtB;IACA;IACA,MAAM;MAAEM;IAAK,CAAC,GAAGL,QAAQ,CAACM,KAAK,IAAI;MAAED,IAAI,EAAE;QAAEE,QAAQ,EAAE;MAAI;IAAE,CAAC;IAC9D,oBAAOlB,OAAA,CAACV,QAAQ;MAAC6B,EAAE,EAAEH;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAC/B;EAEA,IAAI,CAACX,UAAU,IAAI,CAACM,IAAI,EAAE;IACxB;IACA,oBAAOV,OAAA,CAACV,QAAQ;MAAC6B,EAAE,EAAC,QAAQ;MAACF,KAAK,EAAE;QAAED,IAAI,EAAEL;MAAS;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAC5D;;EAEA;EACA,OAAOV,SAAS;AAClB,CAAC;AAACF,EAAA,CArCIF,SAAS;EAAA,QAOIJ,cAAc,EAOTC,cAAc,EACvBA,cAAc,EACVP,WAAW;AAAA;AAAA6B,EAAA,GAhBxBnB,SAAS;AAuCf,OAAO,MAAMoB,QAAQ,GAAIC,KAAU,iBAAKtB,OAAA,CAACC,SAAS;EAACG,UAAU,EAAE,KAAM;EAAA,GAAKkB;AAAK;EAAAV,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QAAI;AAACQ,GAAA,GAAvEF,QAAQ;AACrB,OAAO,MAAMG,UAAU,GAAIF,KAAU,iBAAKtB,OAAA,CAACC,SAAS;EAACG,UAAU,EAAE,IAAK;EAAA,GAAKkB;AAAK;EAAAV,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QAAI;AAACU,GAAA,GAAxED,UAAU;AAAA,IAAAJ,EAAA,EAAAG,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}