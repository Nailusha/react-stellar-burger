{"ast":null,"code":"import _objectSpread from\"C:/Users/Nailusha/Desktop/yandex-dev/react-stellar-burger/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{Navigate,useLocation}from\"react-router-dom\";import React,{useEffect}from\"react\";import{setAuthChecked}from\"../../services/store/reducers/userAuthSlice\";import{checkUserAuth}from\"../../utils/api\";import Preloader from\"../preloder/preloder\";import{useAppDispatch,useAppSelector}from\"../../services/hooks/hooks\";import{jsx as _jsx}from\"react/jsx-runtime\";var Protected=function Protected(_ref){var _ref$onlyUnAuth=_ref.onlyUnAuth,onlyUnAuth=_ref$onlyUnAuth===void 0?false:_ref$onlyUnAuth,component=_ref.component;var dispatch=useAppDispatch();useEffect(function(){dispatch(setAuthChecked(false));dispatch(checkUserAuth());},[dispatch]);var isAuthChecked=useAppSelector(function(store){return store.userStatus.isAuthChecked;});var user=useAppSelector(function(store){return store.userStatus.user;});var location=useLocation();if(!isAuthChecked){// Запрос еще выполняется\nreturn/*#__PURE__*/_jsx(Preloader,{});// или прелоадер\n}if(onlyUnAuth&&user){// Пользователь авторизован, но запрос предназначен только для неавторизованных пользователей\n// Нужно сделать редирект на главную страницу или на тот адрес, что записан в location.state.from\nvar _ref2=location.state||{from:{pathname:\"/\"}},from=_ref2.from;return/*#__PURE__*/_jsx(Navigate,{to:from});}if(!onlyUnAuth&&!user){// Сервер не ответил\nreturn/*#__PURE__*/_jsx(Navigate,{to:\"/login\",state:{from:location}});}// !onlyUnAuth && user\nreturn component;};export var OnlyAuth=function OnlyAuth(props){return/*#__PURE__*/_jsx(Protected,_objectSpread({onlyUnAuth:false},props));};export var OnlyUnAuth=function OnlyUnAuth(props){return/*#__PURE__*/_jsx(Protected,_objectSpread({onlyUnAuth:true},props));};","map":{"version":3,"names":["Navigate","useLocation","React","useEffect","setAuthChecked","checkUserAuth","Preloader","useAppDispatch","useAppSelector","jsx","_jsx","Protected","_ref","_ref$onlyUnAuth","onlyUnAuth","component","dispatch","isAuthChecked","store","userStatus","user","location","_ref2","state","from","pathname","to","OnlyAuth","props","_objectSpread","OnlyUnAuth"],"sources":["C:/Users/Nailusha/Desktop/yandex-dev/react-stellar-burger/src/components/protected-route/protected-route.tsx"],"sourcesContent":["import { Navigate, useLocation } from \"react-router-dom\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport { setAuthChecked } from \"../../services/store/reducers/userAuthSlice\";\r\nimport { checkUserAuth } from \"../../utils/api\";\r\nimport Preloader from \"../preloder/preloder\";\r\nimport { useAppDispatch, useAppSelector } from \"../../services/hooks/hooks\";\r\n\r\nconst Protected = ({ onlyUnAuth = false, component }:{ onlyUnAuth: boolean, component: any }) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(setAuthChecked(false));\r\n    dispatch(checkUserAuth());\r\n  }, [dispatch]);\r\n\r\n  const isAuthChecked = useAppSelector((store) => store.userStatus.isAuthChecked);\r\n  const user = useAppSelector((store) => store.userStatus.user);\r\n  const location = useLocation();\r\n\r\n  if (!isAuthChecked) {\r\n    // Запрос еще выполняется\r\n    return <Preloader/>; // или прелоадер\r\n  }\r\n\r\n  if (onlyUnAuth && user) {\r\n    // Пользователь авторизован, но запрос предназначен только для неавторизованных пользователей\r\n    // Нужно сделать редирект на главную страницу или на тот адрес, что записан в location.state.from\r\n    const { from } = location.state || { from: { pathname: \"/\" } };\r\n    return <Navigate to={from} />;\r\n  }\r\n\r\n  if (!onlyUnAuth && !user) {\r\n    // Сервер не ответил\r\n    return <Navigate to=\"/login\" state={{ from: location }} />;\r\n  }\r\n\r\n  // !onlyUnAuth && user\r\n  return component;\r\n};\r\n\r\nexport const OnlyAuth = (props: any) => <Protected onlyUnAuth={false} {...props} />;\r\nexport const OnlyUnAuth = (props: any) => <Protected onlyUnAuth={true} {...props} />;\r\n\r\n"],"mappings":"8IAAA,OAASA,QAAQ,CAAEC,WAAW,KAAQ,kBAAkB,CACxD,MAAO,CAAAC,KAAK,EAAIC,SAAS,KAAQ,OAAO,CAExC,OAASC,cAAc,KAAQ,6CAA6C,CAC5E,OAASC,aAAa,KAAQ,iBAAiB,CAC/C,MAAO,CAAAC,SAAS,KAAM,sBAAsB,CAC5C,OAASC,cAAc,CAAEC,cAAc,KAAQ,4BAA4B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE5E,GAAM,CAAAC,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAAC,IAAA,CAAkF,KAAAC,eAAA,CAAAD,IAAA,CAA5EE,UAAU,CAAVA,UAAU,CAAAD,eAAA,UAAG,KAAK,CAAAA,eAAA,CAAEE,SAAS,CAAAH,IAAA,CAATG,SAAS,CAChD,GAAM,CAAAC,QAAQ,CAAGT,cAAc,EAAE,CAEjCJ,SAAS,CAAC,UAAM,CACda,QAAQ,CAACZ,cAAc,CAAC,KAAK,CAAC,CAAC,CAC/BY,QAAQ,CAACX,aAAa,EAAE,CAAC,CAC3B,CAAC,CAAE,CAACW,QAAQ,CAAC,CAAC,CAEd,GAAM,CAAAC,aAAa,CAAGT,cAAc,CAAC,SAACU,KAAK,QAAK,CAAAA,KAAK,CAACC,UAAU,CAACF,aAAa,GAAC,CAC/E,GAAM,CAAAG,IAAI,CAAGZ,cAAc,CAAC,SAACU,KAAK,QAAK,CAAAA,KAAK,CAACC,UAAU,CAACC,IAAI,GAAC,CAC7D,GAAM,CAAAC,QAAQ,CAAGpB,WAAW,EAAE,CAE9B,GAAI,CAACgB,aAAa,CAAE,CAClB;AACA,mBAAOP,IAAA,CAACJ,SAAS,IAAE,CAAE;AACvB,CAEA,GAAIQ,UAAU,EAAIM,IAAI,CAAE,CACtB;AACA;AACA,IAAAE,KAAA,CAAiBD,QAAQ,CAACE,KAAK,EAAI,CAAEC,IAAI,CAAE,CAAEC,QAAQ,CAAE,GAAI,CAAE,CAAC,CAAtDD,IAAI,CAAAF,KAAA,CAAJE,IAAI,CACZ,mBAAOd,IAAA,CAACV,QAAQ,EAAC0B,EAAE,CAAEF,IAAK,EAAG,CAC/B,CAEA,GAAI,CAACV,UAAU,EAAI,CAACM,IAAI,CAAE,CACxB;AACA,mBAAOV,IAAA,CAACV,QAAQ,EAAC0B,EAAE,CAAC,QAAQ,CAACH,KAAK,CAAE,CAAEC,IAAI,CAAEH,QAAS,CAAE,EAAG,CAC5D,CAEA;AACA,MAAO,CAAAN,SAAS,CAClB,CAAC,CAED,MAAO,IAAM,CAAAY,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAIC,KAAU,qBAAKlB,IAAA,CAACC,SAAS,CAAAkB,aAAA,EAACf,UAAU,CAAE,KAAM,EAAKc,KAAK,EAAI,GACnF,MAAO,IAAM,CAAAE,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAIF,KAAU,qBAAKlB,IAAA,CAACC,SAAS,CAAAkB,aAAA,EAACf,UAAU,CAAE,IAAK,EAAKc,KAAK,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}