{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nailusha\\\\Desktop\\\\yandex-dev\\\\react-stellar-burger\\\\src\\\\components\\\\app\\\\app.jsx\",\n  _s = $RefreshSig$();\nimport styles from \"./app.module.css\";\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport { ingridientPropType } from \"../utils/prop-types.js\";\nimport AppHeader from \"../header/app-header/app-header\";\nimport AppMain from \"../main/app-main/app-main\";\nimport Modal from \"../modal/modal\";\nimport OrderDetails from \"../modal/order-details/order-details\";\nimport ModalOverlay from \"../modal-overlay/modal-overlay\";\nimport IngridientDetails from \"../modal/ingridient-details/ingridient-details\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isModalOpen, setIsOpen] = useState(false);\n  const [dataIngridients, setData] = useState([]);\n  const [imageIngridient, setImageIngridient] = useState(null);\n  const [isClickOrderList, setClickOrderList] = useState(false);\n  const [isClickIngridient, setClickIngridient] = useState(false);\n  const onClick = () => {\n    setIsOpen(true);\n  };\n  const childForModal = () => {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      onClick: onClick,\n      setIsOpen: setIsOpen,\n      children: isClickOrderList && /*#__PURE__*/_jsxDEV(OrderDetails, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 31\n      }, this) || isClickIngridient && /*#__PURE__*/_jsxDEV(IngridientDetails, {\n        imageIngridient: imageIngridient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  };\n  const getData = () => {\n    return fetch(\"https://norma.nomoreparties.space/api/ingredients\").then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }).then(res => {\n      setData(res.data);\n    });\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  if (dataIngridients.length < 1) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppHeader, {\n      setClickOrderList: setClickOrderList,\n      setIsOpen: setIsOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppMain, {\n      setClickIngridient: setClickIngridient,\n      setIsOpen: setIsOpen,\n      setImageIngridient: setImageIngridient,\n      ingridients: dataIngridients\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [childForModal(), /*#__PURE__*/_jsxDEV(ModalOverlay, {\n        setClickOrderList: setClickOrderList,\n        setIsOpen: setIsOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n_s(App, \"nfiVnKuX3RNXyN/kPFAK1Q+Lg/8=\");\n_c = App;\nAppMain.propTypes = {\n  ingridients: PropTypes.arrayOf(ingridientPropType)\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["styles","React","useEffect","PropTypes","useState","ingridientPropType","AppHeader","AppMain","Modal","OrderDetails","ModalOverlay","IngridientDetails","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isModalOpen","setIsOpen","dataIngridients","setData","imageIngridient","setImageIngridient","isClickOrderList","setClickOrderList","isClickIngridient","setClickIngridient","onClick","childForModal","children","fileName","_jsxFileName","lineNumber","columnNumber","getData","fetch","then","res","ok","json","Promise","reject","status","data","length","ingridients","_c","propTypes","arrayOf","$RefreshReg$"],"sources":["C:/Users/Nailusha/Desktop/yandex-dev/react-stellar-burger/src/components/app/app.jsx"],"sourcesContent":["import styles from \"./app.module.css\";\r\nimport React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\nimport { ingridientPropType } from \"../utils/prop-types.js\";\r\n\r\nimport AppHeader from \"../header/app-header/app-header\";\r\nimport AppMain from \"../main/app-main/app-main\";\r\nimport Modal from \"../modal/modal\";\r\nimport OrderDetails from \"../modal/order-details/order-details\";\r\nimport ModalOverlay from \"../modal-overlay/modal-overlay\";\r\nimport IngridientDetails from \"../modal/ingridient-details/ingridient-details\";\r\n\r\nfunction App() {\r\n  const [isModalOpen, setIsOpen] = useState(false);\r\n  const [dataIngridients, setData] = useState([]);\r\n  const [imageIngridient, setImageIngridient] = useState(null);\r\n  const [isClickOrderList, setClickOrderList] = useState(false);\r\n  const [isClickIngridient, setClickIngridient] = useState(false);\r\n\r\n  const onClick = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const childForModal = () => {\r\n    return (\r\n      <Modal onClick={onClick} setIsOpen={setIsOpen}>\r\n        {(isClickOrderList && <OrderDetails />) ||\r\n          (isClickIngridient && (\r\n            <IngridientDetails imageIngridient={imageIngridient} />\r\n          ))}\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const getData = () => {\r\n    return fetch(\"https://norma.nomoreparties.space/api/ingredients\")\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      })\r\n      .then((res) => {\r\n        setData(res.data);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  if (dataIngridients.length < 1) return null;\r\n\r\n  return (\r\n    <>\r\n      <AppHeader setClickOrderList={setClickOrderList} setIsOpen={setIsOpen} />\r\n      <AppMain\r\n        setClickIngridient={setClickIngridient}\r\n        setIsOpen={setIsOpen}\r\n        setImageIngridient={setImageIngridient}\r\n        ingridients={dataIngridients}\r\n      />\r\n\r\n      {isModalOpen && (\r\n        <>\r\n          {childForModal()}\r\n          <ModalOverlay\r\n            setClickOrderList={setClickOrderList}\r\n            setIsOpen={setIsOpen}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nAppMain.propTypes = {\r\n  ingridients: PropTypes.arrayOf(ingridientPropType),\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}