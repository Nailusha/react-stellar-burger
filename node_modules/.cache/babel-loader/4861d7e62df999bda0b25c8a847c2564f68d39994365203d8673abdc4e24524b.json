{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\nimport { wsOpen, wsClose, wsMessage, wsError, wsConnecting } from \"./actions\";\nimport { WebsocketStatus } from \"../../../../utils/live-table\";\nconst initialState = {\n  status: WebsocketStatus.OFFLINE,\n  connectionError: \"\",\n  data: null\n};\nexport const wsReducer = createReducer(initialState, builder => {\n  builder.addCase(wsConnecting, state => {\n    state.status = WebsocketStatus.CONNECTING;\n  }).addCase(wsOpen, state => {\n    state.status = WebsocketStatus.ONLINE;\n    state.connectionError = \"\";\n  }).addCase(wsClose, state => {\n    state.status = WebsocketStatus.OFFLINE;\n  }).addCase(wsError, (state, action) => {\n    state.connectionError = action.payload;\n  }).addCase(wsMessage, (state, action) => {\n    state.data = action.payload;\n  });\n});","map":{"version":3,"names":["createReducer","wsOpen","wsClose","wsMessage","wsError","wsConnecting","WebsocketStatus","initialState","status","OFFLINE","connectionError","data","wsReducer","builder","addCase","state","CONNECTING","ONLINE","action","payload"],"sources":["C:/Users/Nailusha/Desktop/yandex-dev/react-stellar-burger/src/services/store/reducers/socket/reduser.tsx"],"sourcesContent":["import { PayloadAction, createReducer } from \"@reduxjs/toolkit\";\r\nimport { wsOpen, wsClose, wsMessage, wsError, wsConnecting } from \"./actions\";\r\nimport { TWSMessage, WebsocketStatus } from \"../../../../utils/live-table\";\r\n\r\nexport type LiveTableStore = {\r\n  status: WebsocketStatus;\r\n  connectionError: string;\r\n  data: TWSMessage | null;\r\n};\r\n\r\nconst initialState: LiveTableStore = {\r\n  status: WebsocketStatus.OFFLINE,\r\n  connectionError: \"\",\r\n  data: null,\r\n};\r\n\r\nexport const wsReducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(wsConnecting, (state) => {\r\n      state.status = WebsocketStatus.CONNECTING;\r\n    })\r\n    .addCase(wsOpen, (state) => {\r\n      state.status = WebsocketStatus.ONLINE;\r\n      state.connectionError = \"\";\r\n    })\r\n    .addCase(wsClose, (state) => {\r\n      state.status = WebsocketStatus.OFFLINE;\r\n    })\r\n    .addCase(wsError, (state, action) => {\r\n      state.connectionError = action.payload;\r\n    })\r\n    .addCase(wsMessage, (state, action: PayloadAction<TWSMessage | null>) => {\r\n      state.data = action.payload;\r\n    });\r\n});"],"mappings":"AAAA,SAAwBA,aAAa,QAAQ,kBAAkB;AAC/D,SAASC,MAAM,EAAEC,OAAO,EAAEC,SAAS,EAAEC,OAAO,EAAEC,YAAY,QAAQ,WAAW;AAC7E,SAAqBC,eAAe,QAAQ,8BAA8B;AAQ1E,MAAMC,YAA4B,GAAG;EACnCC,MAAM,EAAEF,eAAe,CAACG,OAAO;EAC/BC,eAAe,EAAE,EAAE;EACnBC,IAAI,EAAE;AACR,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGZ,aAAa,CAACO,YAAY,EAAGM,OAAO,IAAK;EAChEA,OAAO,CACJC,OAAO,CAACT,YAAY,EAAGU,KAAK,IAAK;IAChCA,KAAK,CAACP,MAAM,GAAGF,eAAe,CAACU,UAAU;EAC3C,CAAC,CAAC,CACDF,OAAO,CAACb,MAAM,EAAGc,KAAK,IAAK;IAC1BA,KAAK,CAACP,MAAM,GAAGF,eAAe,CAACW,MAAM;IACrCF,KAAK,CAACL,eAAe,GAAG,EAAE;EAC5B,CAAC,CAAC,CACDI,OAAO,CAACZ,OAAO,EAAGa,KAAK,IAAK;IAC3BA,KAAK,CAACP,MAAM,GAAGF,eAAe,CAACG,OAAO;EACxC,CAAC,CAAC,CACDK,OAAO,CAACV,OAAO,EAAE,CAACW,KAAK,EAAEG,MAAM,KAAK;IACnCH,KAAK,CAACL,eAAe,GAAGQ,MAAM,CAACC,OAAO;EACxC,CAAC,CAAC,CACDL,OAAO,CAACX,SAAS,EAAE,CAACY,KAAK,EAAEG,MAAwC,KAAK;IACvEH,KAAK,CAACJ,IAAI,GAAGO,MAAM,CAACC,OAAO;EAC7B,CAAC,CAAC;AACN,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}