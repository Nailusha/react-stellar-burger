{"ast":null,"code":"import styles from \"./app.module.css\";\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport { ingridientPropType } from '../utils/prop-types.js';\nimport AppHeader from \"../header/app-header/app-header\";\nfunction App() {\n  return;\n}\n\n/*import AppMain from \"../main/app-main/app-main\";\r\nimport Modal from \"../modal/modal\";\r\nimport Details from \"../modal/order-details/order-details\";\r\nimport ModalOverlay from '../modal-overlay/modal-overlay';\r\nimport Ingridient from \"../modal/ingridient-details/ingridient-details\";\r\n\r\nfunction App() {\r\n\r\n  const [isModalOpen, setIsOpen] = useState(false);\r\n  const [dataIngridients, setData] = useState([]);\r\n  const [imageIngridient, setImageIngridient] = useState(null);\r\n  const [isClickOrderList, setClickOrderList] = useState(false);\r\n  const [isClickIngridient, setClickIngridient] = useState(false);\r\n  \r\n  const onClick = () => {\r\n    setIsOpen(true)\r\n  }\r\n\r\n  const childForModal = () => {\r\n    return (\r\n      <Modal onClick={onClick} setIsOpen={setIsOpen}>\r\n        {isClickOrderList && <Details /> || isClickIngridient && <Ingridient imageIngridient={imageIngridient}/>}\r\n      </Modal>     \r\n    )\r\n  }\r\n\r\n  const getData = () => {\r\n    return (\r\n      fetch(\"https://norma.nomoreparties.space/api/ingredients\")\r\n        .then((res) => {\r\n          if (res.ok) {\r\n            return res.json();\r\n          }\r\n          return Promise.reject(`Ошибка: ${res.status}`);\r\n        })\r\n        .then((res) => {\r\n        setData(res.data)\r\n      })\r\n    )\r\n  }\r\n\r\n    useEffect(() => {\r\n      \r\n      getData()\r\n    \r\n    }, [])\r\n\r\n  if (dataIngridients.length < 1) return null\r\n  \r\n  return (\r\n    <>\r\n      <AppHeader setClickOrderList={setClickOrderList} setIsOpen={setIsOpen} />\r\n      <AppMain setClickIngridient={setClickIngridient} setIsOpen={setIsOpen} \r\n      setImageIngridient={setImageIngridient} ingridients={dataIngridients} />\r\n\r\n      {isModalOpen && (\r\n      <> \r\n      {childForModal()}\r\n      <ModalOverlay setClickOrderList={setClickOrderList} setIsOpen={setIsOpen} /> \r\n      </>\r\n        \r\n      )}\r\n    </>\r\n  ); \r\n}\r\n\r\nAppMain.propTypes = {\r\n  ingridients: PropTypes.arrayOf(ingridientPropType)\r\n\r\n}*/\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["styles","React","useEffect","PropTypes","useState","ingridientPropType","AppHeader","App","_c","$RefreshReg$"],"sources":["C:/Users/Nailusha/Desktop/yandex-dev/react-stellar-burger/src/components/app/app.jsx"],"sourcesContent":["import styles from \"./app.module.css\";\r\nimport React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\nimport { ingridientPropType } from '../utils/prop-types.js';\r\n\r\nimport AppHeader from \"../header/app-header/app-header\";\r\n\r\n\r\nfunction App() {\r\n\r\n  return\r\n}\r\n\r\n/*import AppMain from \"../main/app-main/app-main\";\r\nimport Modal from \"../modal/modal\";\r\nimport Details from \"../modal/order-details/order-details\";\r\nimport ModalOverlay from '../modal-overlay/modal-overlay';\r\nimport Ingridient from \"../modal/ingridient-details/ingridient-details\";\r\n\r\nfunction App() {\r\n\r\n  const [isModalOpen, setIsOpen] = useState(false);\r\n  const [dataIngridients, setData] = useState([]);\r\n  const [imageIngridient, setImageIngridient] = useState(null);\r\n  const [isClickOrderList, setClickOrderList] = useState(false);\r\n  const [isClickIngridient, setClickIngridient] = useState(false);\r\n  \r\n  const onClick = () => {\r\n    setIsOpen(true)\r\n  }\r\n\r\n  const childForModal = () => {\r\n    return (\r\n      <Modal onClick={onClick} setIsOpen={setIsOpen}>\r\n        {isClickOrderList && <Details /> || isClickIngridient && <Ingridient imageIngridient={imageIngridient}/>}\r\n      </Modal>     \r\n    )\r\n  }\r\n\r\n  const getData = () => {\r\n    return (\r\n      fetch(\"https://norma.nomoreparties.space/api/ingredients\")\r\n        .then((res) => {\r\n          if (res.ok) {\r\n            return res.json();\r\n          }\r\n          return Promise.reject(`Ошибка: ${res.status}`);\r\n        })\r\n        .then((res) => {\r\n        setData(res.data)\r\n      })\r\n    )\r\n  }\r\n\r\n    useEffect(() => {\r\n      \r\n      getData()\r\n    \r\n    }, [])\r\n\r\n  if (dataIngridients.length < 1) return null\r\n  \r\n  return (\r\n    <>\r\n      <AppHeader setClickOrderList={setClickOrderList} setIsOpen={setIsOpen} />\r\n      <AppMain setClickIngridient={setClickIngridient} setIsOpen={setIsOpen} \r\n      setImageIngridient={setImageIngridient} ingridients={dataIngridients} />\r\n\r\n      {isModalOpen && (\r\n      <> \r\n      {childForModal()}\r\n      <ModalOverlay setClickOrderList={setClickOrderList} setIsOpen={setIsOpen} /> \r\n      </>\r\n        \r\n      )}\r\n    </>\r\n  ); \r\n}\r\n\r\nAppMain.propTypes = {\r\n  ingridients: PropTypes.arrayOf(ingridientPropType)\r\n\r\n}*/\r\n\r\nexport default App;\r\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,kBAAkB;AACrC,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,kBAAkB,QAAQ,wBAAwB;AAE3D,OAAOC,SAAS,MAAM,iCAAiC;AAGvD,SAASC,GAAGA,CAAA,EAAG;EAEb;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArEAC,EAAA,GALSD,GAAG;AA4EZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}