{"ast":null,"code":"export var BASE_URL=\"https://norma.nomoreparties.space/api\";export function checkResponse(res){if(res.ok){return res.json();}/*при ошибке отклоняю промис*/return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}//делаю обертку вокруг fetch чтобы в разных запросах можно было использовать, url базовый статичный, меняется только endpoint в этом api\nexport function request(endpoint,options){return fetch(\"\".concat(BASE_URL).concat(endpoint),options).then(checkResponse);}// async нужен когда несколько await поэтому убрал от сюда + а далее передаю рес, но его убрал т.к в стрелочной функции рес передается один и тотже в функицию\nexport var getIngredients=function getIngredients(){return request(\"/ingredients\");};export var sendOrder=function sendOrder(dataId){return request(\"/orders\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({ingredients:dataId})});};","map":{"version":3,"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","concat","status","request","endpoint","options","fetch","then","getIngredients","sendOrder","dataId","method","headers","body","JSON","stringify","ingredients"],"sources":["C:/Users/Nailusha/Desktop/yandex-dev/react-stellar-burger/src/components/utils/api.js"],"sourcesContent":["export const BASE_URL = \"https://norma.nomoreparties.space/api\";\r\n\r\nexport function checkResponse(res) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  /*при ошибке отклоняю промис*/\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n}\r\n\r\n//делаю обертку вокруг fetch чтобы в разных запросах можно было использовать, url базовый статичный, меняется только endpoint в этом api\r\nexport function request(endpoint, options) {\r\n  return fetch(`${BASE_URL}${endpoint}`, options).then(checkResponse);\r\n}\r\n\r\n// async нужен когда несколько await поэтому убрал от сюда + а далее передаю рес, но его убрал т.к в стрелочной функции рес передается один и тотже в функицию\r\nexport const getIngredients = () => request(`/ingredients`);\r\n\r\nexport const sendOrder = (dataId) => {\r\n  return request(`/orders`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      ingredients: dataId,\r\n    }),\r\n  });\r\n};"],"mappings":"AAAA,MAAO,IAAM,CAAAA,QAAQ,CAAG,uCAAuC,CAE/D,MAAO,SAAS,CAAAC,aAAaA,CAACC,GAAG,CAAE,CACjC,GAAIA,GAAG,CAACC,EAAE,CAAE,CACV,MAAO,CAAAD,GAAG,CAACE,IAAI,EAAE,CACnB,CACA,8BACA,MAAO,CAAAC,OAAO,CAACC,MAAM,0CAAAC,MAAA,CAAYL,GAAG,CAACM,MAAM,EAAG,CAChD,CAEA;AACA,MAAO,SAAS,CAAAC,OAAOA,CAACC,QAAQ,CAAEC,OAAO,CAAE,CACzC,MAAO,CAAAC,KAAK,IAAAL,MAAA,CAAIP,QAAQ,EAAAO,MAAA,CAAGG,QAAQ,EAAIC,OAAO,CAAC,CAACE,IAAI,CAACZ,aAAa,CAAC,CACrE,CAEA;AACA,MAAO,IAAM,CAAAa,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAA,QAAS,CAAAL,OAAO,gBAAgB,GAE3D,MAAO,IAAM,CAAAM,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAIC,MAAM,CAAK,CACnC,MAAO,CAAAP,OAAO,WAAY,CACxBQ,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBC,WAAW,CAAEN,MACf,CAAC,CACH,CAAC,CAAC,CACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}