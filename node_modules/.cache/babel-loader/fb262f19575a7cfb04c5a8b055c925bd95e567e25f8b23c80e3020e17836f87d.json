{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { forgotPassword, loginUser, logoutUser, registerUser, resetPassword } from '../../../utils/api';\nexport const initialState = {\n  user: {\n    name: '',\n    email: ''\n  },\n  isAuthChecked: false,\n  isLoding: false,\n  error: \" \"\n};\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setAuthChecked: (state, action) => {\n      state.isAuthChecked = action.payload;\n    },\n    setUser: (state, action) => {\n      state.user = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(registerUser.pending.type, (state, action) => {\n      state.isLoding = true;\n      state.error = \" \";\n    }).addCase(registerUser.fulfilled.type, (state, action) => {\n      state.user = action.payload.user;\n      state.isAuthChecked = true;\n    }).addCase(registerUser.rejected.type, (state, action) => {\n      state.isLoding = false;\n      state.error = action.payload;\n    }).addCase(loginUser.pending.type, (state, action) => {\n      state.isLoding = false;\n      state.error = \" \";\n    }).addCase(loginUser.fulfilled.type, (state, action) => {\n      state.user = action.payload.user;\n      state.isAuthChecked = true;\n      state.user = action.payload.user;\n    }).addCase(loginUser.rejected.type, (state, action) => {\n      state.isLoding = false;\n      state.error = action.payload;\n    }).addCase(logoutUser.pending.type, state => {\n      state.isLoding = true;\n      state.error = \" \";\n    }).addCase(logoutUser.fulfilled.type, state => {\n      state.user = {\n        name: '',\n        email: ''\n      };\n      state.isLoding = false;\n    }).addCase(logoutUser.rejected.type, (state, action) => {\n      state.isLoding = false;\n      state.error = action.payload;\n    }).addCase(forgotPassword.pending.type, state => {\n      state.isLoding = true;\n      state.error = \" \";\n    }).addCase(forgotPassword.fulfilled.type, state => {\n      state.isLoding = false;\n    }).addCase(forgotPassword.rejected.type, (state, action) => {\n      state.isLoding = false;\n      state.error = action.payload;\n    }).addCase(resetPassword.pending.type, state => {\n      state.isLoding = true;\n      state.error = \" \";\n    }).addCase(resetPassword.fulfilled.type, state => {\n      state.isLoding = false;\n    }).addCase(resetPassword.rejected.type, (state, action) => {\n      state.isLoding = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  setAuthChecked,\n  setUser\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","forgotPassword","loginUser","logoutUser","registerUser","resetPassword","initialState","user","name","email","isAuthChecked","isLoding","error","userSlice","reducers","setAuthChecked","state","action","payload","setUser","extraReducers","builder","addCase","pending","type","fulfilled","rejected","actions","reducer"],"sources":["C:/Users/Nailusha/Desktop/yandex-dev/react-stellar-burger/src/services/store/reducers/userAuthSlice.tsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { forgotPassword, loginUser, logoutUser, registerUser, resetPassword } from '../../../utils/api';\r\n\r\nexport type TstateUser = {\r\n  user: {\r\n    name: string,\r\n    email: string\r\n  },\r\n  isAuthChecked: boolean,\r\n  isLoding: boolean,\r\n  error: string,\r\n};\r\n\r\nexport const initialState:TstateUser = {\r\n  user: {\r\n    name: '',\r\n    email: ''\r\n  },\r\n  isAuthChecked: false,\r\n  isLoding: false,\r\n  error: \" \",\r\n};\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n\r\n  reducers: {\r\n    setAuthChecked: (state, action) => {\r\n      state.isAuthChecked = action.payload;\r\n    },\r\n    setUser: (state, action) => {\r\n      state.user = action.payload;\r\n    }\r\n  },\r\n\r\n  extraReducers: (builder) => {\r\n    builder\r\n      \r\n    .addCase(registerUser.pending.type, (state, action) => {\r\n      state.isLoding = true;\r\n      state.error = \" \";\r\n    })\r\n      \r\n    .addCase(registerUser.fulfilled.type, (state, action:any) => {\r\n      state.user = action.payload.user;\r\n      state.isAuthChecked = true;\r\n    })\r\n      \r\n    .addCase(registerUser.rejected.type, (state, action:any) => {\r\n        state.isLoding = false;\r\n        state.error = action.payload;  \r\n    })\r\n      \r\n    .addCase(loginUser.pending.type, (state, action) => {\r\n      state.isLoding = false;\r\n      state.error = \" \";\r\n    })\r\n      \r\n    .addCase(loginUser.fulfilled.type, (state, action:any) => {\r\n      state.user = action.payload.user;\r\n      state.isAuthChecked = true;\r\n      state.user = action.payload.user;\r\n    })\r\n      \r\n    .addCase(loginUser.rejected.type, (state, action:any) => {\r\n        state.isLoding = false;\r\n        state.error = action.payload;  \r\n    })\r\n\r\n    .addCase(logoutUser.pending.type, (state) => {\r\n      state.isLoding = true;\r\n      state.error = \" \";\r\n    })\r\n    .addCase(logoutUser.fulfilled.type, (state) => {\r\n      state.user = {\r\n        name: '',\r\n        email: ''\r\n      };\r\n      state.isLoding = false;\r\n    })\r\n    .addCase(logoutUser.rejected.type, (state, action:any) => {\r\n      state.isLoding = false;\r\n      state.error = action.payload;\r\n    })\r\n    .addCase(forgotPassword.pending.type, (state) => {\r\n      state.isLoding = true;\r\n      state.error = \" \";\r\n    })\r\n    .addCase(forgotPassword.fulfilled.type, (state) => {\r\n      state.isLoding = false;\r\n    })\r\n    .addCase(forgotPassword.rejected.type, (state, action:any) => {\r\n      state.isLoding = false;\r\n      state.error = action.payload;\r\n    })\r\n    .addCase(resetPassword.pending.type, (state) => {\r\n      state.isLoding = true;\r\n      state.error = \" \";\r\n    })\r\n    .addCase(resetPassword.fulfilled.type, (state) => {\r\n      state.isLoding = false;\r\n    })\r\n    .addCase(resetPassword.rejected.type, (state, action:any) => {\r\n      state.isLoding = false;\r\n      state.error = action.payload;\r\n    })\r\n  },\r\n});\r\n\r\nexport const { setAuthChecked, setUser} = userSlice.actions\r\n\r\nexport default userSlice.reducer;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}