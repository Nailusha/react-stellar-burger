{"ast":null,"code":"import{fetchIngredients}from\"./ingredientQuery\";import{createSlice}from\"@reduxjs/toolkit\";export var initialState={ingredients:[],isLoding:false,error:\" \"};var burgerIngredientsSlice=createSlice({name:\"ingredients\",initialState:initialState,reducers:{},extraReducers:function extraReducers(builder){builder// Добавьте редукторы для дополнительных типов действий здесь\n.addCase(fetchIngredients.pending.type,function(state){state.isLoding=true;state.error=\" \";}).addCase(fetchIngredients.fulfilled.type,function(state,action){state.isLoding=false;state.error=\" \";state.ingredients=action.payload.data;}).addCase(fetchIngredients.rejected.type,function(state,action){state.isLoding=false;state.error=action.payload;});}});export default burgerIngredientsSlice.reducer;","map":{"version":3,"names":["fetchIngredients","createSlice","initialState","ingredients","isLoding","error","burgerIngredientsSlice","name","reducers","extraReducers","builder","addCase","pending","type","state","fulfilled","action","payload","data","rejected","reducer"],"sources":["C:/Users/Nailusha/Desktop/yandex-dev/react-stellar-burger/src/services/store/reducers/burgerIngredientsSlice.tsx"],"sourcesContent":["import { RootState, TingredintsConstructor } from \"../../../utils/types\";\r\nimport { fetchIngredients } from \"./ingredientQuery\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\ntype Tinitial = {\r\n  ingredients: TingredintsConstructor[],\r\n  isLoding: boolean,\r\n  error: string,\r\n}\r\n\r\nexport const initialState:Tinitial = {\r\n  ingredients: [],\r\n  isLoding: false,\r\n  error: \" \",\r\n};\r\n\r\nconst burgerIngredientsSlice = createSlice({\r\n  name: \"ingredients\",\r\n  initialState,\r\n  reducers: {\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Добавьте редукторы для дополнительных типов действий здесь\r\n      .addCase(fetchIngredients.pending.type, (state) => {\r\n        state.isLoding = true;\r\n        state.error = \" \";\r\n      })\r\n      .addCase(fetchIngredients.fulfilled.type, (state, action:any) => {\r\n        state.isLoding = false;\r\n        state.error = \" \";\r\n        state.ingredients = action.payload.data;\r\n      })\r\n      .addCase(fetchIngredients.rejected.type, (state, action:any) => {\r\n        state.isLoding = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default burgerIngredientsSlice.reducer;\r\n"],"mappings":"AACA,OAASA,gBAAgB,KAAQ,mBAAmB,CACpD,OAASC,WAAW,KAAQ,kBAAkB,CAS9C,MAAO,IAAM,CAAAC,YAAqB,CAAG,CACnCC,WAAW,CAAE,EAAE,CACfC,QAAQ,CAAE,KAAK,CACfC,KAAK,CAAE,GACT,CAAC,CAED,GAAM,CAAAC,sBAAsB,CAAGL,WAAW,CAAC,CACzCM,IAAI,CAAE,aAAa,CACnBL,YAAY,CAAZA,YAAY,CACZM,QAAQ,CAAE,CACV,CAAC,CACDC,aAAa,CAAE,SAAAA,cAACC,OAAO,CAAK,CAC1BA,OACE;AAAA,CACCC,OAAO,CAACX,gBAAgB,CAACY,OAAO,CAACC,IAAI,CAAE,SAACC,KAAK,CAAK,CACjDA,KAAK,CAACV,QAAQ,CAAG,IAAI,CACrBU,KAAK,CAACT,KAAK,CAAG,GAAG,CACnB,CAAC,CAAC,CACDM,OAAO,CAACX,gBAAgB,CAACe,SAAS,CAACF,IAAI,CAAE,SAACC,KAAK,CAAEE,MAAU,CAAK,CAC/DF,KAAK,CAACV,QAAQ,CAAG,KAAK,CACtBU,KAAK,CAACT,KAAK,CAAG,GAAG,CACjBS,KAAK,CAACX,WAAW,CAAGa,MAAM,CAACC,OAAO,CAACC,IAAI,CACzC,CAAC,CAAC,CACDP,OAAO,CAACX,gBAAgB,CAACmB,QAAQ,CAACN,IAAI,CAAE,SAACC,KAAK,CAAEE,MAAU,CAAK,CAC9DF,KAAK,CAACV,QAAQ,CAAG,KAAK,CACtBU,KAAK,CAACT,KAAK,CAAGW,MAAM,CAACC,OAAO,CAC9B,CAAC,CAAC,CACN,CACF,CAAC,CAAC,CAEF,cAAe,CAAAX,sBAAsB,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}