{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nailusha\\\\Desktop\\\\yandex-dev\\\\react-stellar-burger\\\\src\\\\components\\\\main\\\\BurgerIngredients\\\\burger-ingridient-head\\\\burger-ingridient-head.jsx\";\nimport React from 'react';\nimport styles from './burger-ingridient-head.module.css';\nimport PropTypes from 'prop-types';\nimport BurgerIngridient from \"../burger-ingridient/burger-ingridient\";\nimport { ingridientPropType } from '../../../utils/prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction BurgerIngridientHead(_ref) {\n  let {\n    setIsOpen,\n    setClickIngridient,\n    setImageIngridient,\n    ingridients,\n    productName,\n    typeProduct\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text_type_main-default \" + styles.text,\n      children: productName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.burgerIngridient + \" pt-6 pb-10 pl-4 pr-4\",\n      children: ingridients.filter(item => item.type === typeProduct).map(item => {\n        return /*#__PURE__*/_jsxDEV(BurgerIngridient, {\n          setIsOpen: setIsOpen,\n          setClickIngridient: setClickIngridient,\n          setImageIngridient: setImageIngridient,\n          ingridient: item\n        }, item._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c = BurgerIngridientHead;\nBurgerIngridientHead.propTypes = {\n  ingridients: PropTypes.arrayOf(ingridientPropType),\n  setIsOpen: PropTypes.func,\n  setClickIngridient: PropTypes.func,\n  setImageIngridient: PropTypes.func,\n  productName: PropTypes.string,\n  typeProduct: PropTypes.string\n};\nexport default BurgerIngridientHead;\nvar _c;\n$RefreshReg$(_c, \"BurgerIngridientHead\");","map":{"version":3,"names":["React","styles","PropTypes","BurgerIngridient","ingridientPropType","jsxDEV","_jsxDEV","Fragment","_Fragment","BurgerIngridientHead","_ref","setIsOpen","setClickIngridient","setImageIngridient","ingridients","productName","typeProduct","children","className","text","fileName","_jsxFileName","lineNumber","columnNumber","burgerIngridient","filter","item","type","map","ingridient","_id","_c","propTypes","arrayOf","func","string","$RefreshReg$"],"sources":["C:/Users/Nailusha/Desktop/yandex-dev/react-stellar-burger/src/components/main/BurgerIngredients/burger-ingridient-head/burger-ingridient-head.jsx"],"sourcesContent":["import React from 'react';\r\nimport styles from './burger-ingridient-head.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport BurgerIngridient from \"../burger-ingridient/burger-ingridient\";\r\nimport { ingridientPropType } from '../../../utils/prop-types';\r\n\r\nfunction BurgerIngridientHead({setIsOpen, setClickIngridient, setImageIngridient, ingridients, productName, typeProduct}) {\r\n    \r\n    return (\r\n        <>\r\n        <p className={\"text_type_main-default \" + styles.text}>{productName}</p>\r\n        <div className={styles.burgerIngridient + \" pt-6 pb-10 pl-4 pr-4\"}>\r\n        {ingridients.filter(item => item.type === typeProduct).map(item => {\r\n            \r\n          return (\r\n              <BurgerIngridient \r\n              setIsOpen={setIsOpen} \r\n              setClickIngridient={setClickIngridient} \r\n              setImageIngridient={setImageIngridient} \r\n              key={item._id} ingridient={item} />\r\n            )\r\n        })\r\n    }\r\n        </div>\r\n      </>\r\n    )\r\n}\r\n\r\nBurgerIngridientHead.propTypes = {\r\n  ingridients: PropTypes.arrayOf(ingridientPropType),\r\n  setIsOpen: PropTypes.func,\r\n  setClickIngridient: PropTypes.func,\r\n  setImageIngridient: PropTypes.func,\r\n  productName: PropTypes.string,\r\n  typeProduct: PropTypes.string,\r\n}\r\n\r\nexport default BurgerIngridientHead\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,qCAAqC;AACxD,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,gBAAgB,MAAM,wCAAwC;AACrE,SAASC,kBAAkB,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/D,SAASC,oBAAoBA,CAAAC,IAAA,EAA6F;EAAA,IAA5F;IAACC,SAAS;IAAEC,kBAAkB;IAAEC,kBAAkB;IAAEC,WAAW;IAAEC,WAAW;IAAEC;EAAW,CAAC,GAAAN,IAAA;EAEpH,oBACIJ,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACAX,OAAA;MAAGY,SAAS,EAAE,yBAAyB,GAAGjB,MAAM,CAACkB,IAAK;MAAAF,QAAA,EAAEF;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACxEjB,OAAA;MAAKY,SAAS,EAAEjB,MAAM,CAACuB,gBAAgB,GAAG,uBAAwB;MAAAP,QAAA,EACjEH,WAAW,CAACW,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKX,WAAW,CAAC,CAACY,GAAG,CAACF,IAAI,IAAI;QAEjE,oBACIpB,OAAA,CAACH,gBAAgB;UACjBQ,SAAS,EAAEA,SAAU;UACrBC,kBAAkB,EAAEA,kBAAmB;UACvCC,kBAAkB,EAAEA,kBAAmB;UACxBgB,UAAU,EAAEH;QAAK,GAA3BA,IAAI,CAACI,GAAG;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAsB;MAEzC,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEI;EAAA,gBACL;AAET;AAACQ,EAAA,GApBQtB,oBAAoB;AAsB7BA,oBAAoB,CAACuB,SAAS,GAAG;EAC/BlB,WAAW,EAAEZ,SAAS,CAAC+B,OAAO,CAAC7B,kBAAkB,CAAC;EAClDO,SAAS,EAAET,SAAS,CAACgC,IAAI;EACzBtB,kBAAkB,EAAEV,SAAS,CAACgC,IAAI;EAClCrB,kBAAkB,EAAEX,SAAS,CAACgC,IAAI;EAClCnB,WAAW,EAAEb,SAAS,CAACiC,MAAM;EAC7BnB,WAAW,EAAEd,SAAS,CAACiC;AACzB,CAAC;AAED,eAAe1B,oBAAoB;AAAA,IAAAsB,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}