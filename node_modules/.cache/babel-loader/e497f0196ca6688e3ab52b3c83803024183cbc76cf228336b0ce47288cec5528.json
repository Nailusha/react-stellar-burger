{"ast":null,"code":"export const BASE_URL = \"https://norma.nomoreparties.space/api\";\nexport function checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  /*при ошибке отклоняю промис*/\n  return Promise.reject(`Ошибка: ${res.status}`);\n}\n\n//делаю обертку вокруг fetch чтобы в разных запросах можно было использовать, url базовый статичный, меняется только endpoint в этом api\nexport function request(endpoint, options) {\n  return fetch(`${BASE_URL}${endpoint}`, options).then(checkResponse);\n}\n\n// async нужен когда несколько await поэтому убрал от сюда + а далее передаю рес, но его убрал т.к в стрелочной функции рес передается один и тотже в функицию\nexport const getIngredients = () => request(`/ingredients`);\nexport const sendOrder = dataId => {\n  return request(`/orders`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      ingredients: dataId\n    })\n  });\n};","map":{"version":3,"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","status","request","endpoint","options","fetch","then","getIngredients","sendOrder","dataId","method","headers","body","JSON","stringify","ingredients"],"sources":["C:/Users/Nailusha/Desktop/yandex-dev/react-stellar-burger/src/components/utils/api.js"],"sourcesContent":["export const BASE_URL = \"https://norma.nomoreparties.space/api\";\r\n\r\nexport function checkResponse(res) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  /*при ошибке отклоняю промис*/\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n}\r\n\r\n//делаю обертку вокруг fetch чтобы в разных запросах можно было использовать, url базовый статичный, меняется только endpoint в этом api\r\nexport function request(endpoint, options) {\r\n  return fetch(`${BASE_URL}${endpoint}`, options).then(checkResponse);\r\n}\r\n\r\n// async нужен когда несколько await поэтому убрал от сюда + а далее передаю рес, но его убрал т.к в стрелочной функции рес передается один и тотже в функицию\r\nexport const getIngredients = () => request(`/ingredients`);\r\n\r\nexport const sendOrder = (dataId) => {\r\n  return request(`/orders`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      ingredients: dataId,\r\n    }),\r\n  });\r\n};"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,uCAAuC;AAE/D,OAAO,SAASC,aAAaA,CAACC,GAAG,EAAE;EACjC,IAAIA,GAAG,CAACC,EAAE,EAAE;IACV,OAAOD,GAAG,CAACE,IAAI,EAAE;EACnB;EACA;EACA,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;AAChD;;AAEA;AACA,OAAO,SAASC,OAAOA,CAACC,QAAQ,EAAEC,OAAO,EAAE;EACzC,OAAOC,KAAK,CAAE,GAAEX,QAAS,GAAES,QAAS,EAAC,EAAEC,OAAO,CAAC,CAACE,IAAI,CAACX,aAAa,CAAC;AACrE;;AAEA;AACA,OAAO,MAAMY,cAAc,GAAGA,CAAA,KAAML,OAAO,CAAE,cAAa,CAAC;AAE3D,OAAO,MAAMM,SAAS,GAAIC,MAAM,IAAK;EACnC,OAAOP,OAAO,CAAE,SAAQ,EAAE;IACxBQ,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,WAAW,EAAEN;IACf,CAAC;EACH,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}