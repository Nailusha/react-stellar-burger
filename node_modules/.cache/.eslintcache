[{"C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\index.js":"1","C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\reportWebVitals.ts":"2","C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\app\\app.jsx":"3","C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\modal\\modal.jsx":"4","C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\utils\\prop-types.js":"5","C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\header\\app-header\\app-header.jsx":"6","C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\header\\header-list\\header-list.jsx":"7","C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\main\\app-main\\app-main.jsx":"8","C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\main\\BurgerConstructor\\burger-constructor-all\\burger-constructor-all.jsx":"9","C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\main\\BurgerConstructor\\burger-constructor.jsx":"10","C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\main\\BurgerIngredients\\burger-ingridient\\burger-ingridient.jsx":"11","C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\main\\BurgerIngredients\\burger-ingridient-head\\burger-ingridient-head.jsx":"12","C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\main\\BurgerIngredients\\burger-ingridient-tab\\burger-ingridient-tab.jsx":"13","C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\modal\\ingridient-details\\ingridient-details.jsx":"14","C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\modal\\order-details\\order-details.jsx":"15","C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\modal-overlay\\modal-overlay.jsx":"16","C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\utils\\data.js":"17","C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\preloder\\preloder.jsx":"18"},{"size":840,"mtime":1691143599248,"results":"19","hashOfConfig":"20"},{"size":440,"mtime":1688677217352,"results":"21","hashOfConfig":"20"},{"size":3486,"mtime":1691144032732,"results":"22","hashOfConfig":"20"},{"size":890,"mtime":1689004959548,"results":"23","hashOfConfig":"20"},{"size":475,"mtime":1689004905269,"results":"24","hashOfConfig":"20"},{"size":300,"mtime":1688997201048,"results":"25","hashOfConfig":"20"},{"size":1605,"mtime":1689339340152,"results":"26","hashOfConfig":"20"},{"size":4600,"mtime":1691144750942,"results":"27","hashOfConfig":"20"},{"size":1704,"mtime":1691145276726,"results":"28","hashOfConfig":"20"},{"size":2992,"mtime":1691145464616,"results":"29","hashOfConfig":"20"},{"size":1055,"mtime":1691140682106,"results":"30","hashOfConfig":"20"},{"size":1308,"mtime":1691140561453,"results":"31","hashOfConfig":"20"},{"size":945,"mtime":1689338371997,"results":"32","hashOfConfig":"20"},{"size":1751,"mtime":1691139929950,"results":"33","hashOfConfig":"20"},{"size":890,"mtime":1691139078470,"results":"34","hashOfConfig":"20"},{"size":433,"mtime":1691139688190,"results":"35","hashOfConfig":"20"},{"size":7335,"mtime":1689015260438,"results":"36","hashOfConfig":"20"},{"size":242,"mtime":1691143524819,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vaqnec",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"53"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"53"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"53"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"53"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\index.js",[],[],"C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\reportWebVitals.ts",[],[],[],"C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\app\\app.jsx",["102","103","104","105","106"],[],"import styles from \"./app.module.css\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nimport AppHeader from \"../header/app-header/app-header\";\r\nimport AppMain from \"../main/app-main/app-main\";\r\nimport Modal from \"../modal/modal\";\r\nimport OrderDetails from \"../modal/order-details/order-details\";\r\nimport ModalOverlay from \"../modal-overlay/modal-overlay\";\r\nimport IngridientDetails from \"../modal/ingridient-details/ingridient-details\";\r\n\r\nimport Preloader from \"../preloder/preloder\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchIngridients } from \"../../services/store/reducers/ingridientQuery\";\r\nimport { ingridientSelector } from \"../../services/store/selectors/ingridientSelector\";\r\n\r\n\r\nconst App = () => {\r\n  const [isloding, setIsLoding] = useState(false);\r\n  const ingridients = useSelector(ingridientSelector);\r\n  const { setClickOrderList, setIsOpen } = useSelector(\r\n    (state) => state.ModalOverlay\r\n  );\r\n  const isClickStutusIngridient = useSelector(\r\n    (state) => state.ingridDetails.clickStutus\r\n  );\r\n  const isClickStutusDetails = useSelector(\r\n    (state) => state.orderDetails.clickStutus\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const childForModal = () => {\r\n    return (\r\n      <Modal>\r\n        {(isClickStutusDetails && <OrderDetails />) ||\r\n          (isClickStutusIngridient && <IngridientDetails />)}\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchIngridients());\r\n  }, []);\r\n\r\n  if (ingridients.length < 1) return null;\r\n\r\n  if (isloding) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AppHeader />\r\n      <AppMain />\r\n      {setIsOpen && childForModal()}\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\n/*function App() {\r\n  const [isModalOpen, setIsOpen] = useState(false);\r\n  const [dataIngridients, setData] = useState([]);\r\n  const [imageIngridient, setImageIngridient] = useState(null);\r\n  const [isClickOrderList, setClickOrderList] = useState(false);\r\n  const [isClickIngridient, setClickIngridient] = useState(false);\r\n\r\n  const onClick = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const childForModal = () => {\r\n    return (\r\n      <Modal onClick={onClick} setIsOpen={setIsOpen}>\r\n        {(isClickOrderList && <OrderDetails />) ||\r\n          (isClickIngridient && (\r\n            <IngridientDetails imageIngridient={imageIngridient} />\r\n          ))}\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const getData = () => {\r\n    return fetch(\"https://norma.nomoreparties.space/api/ingredients\")\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      })\r\n      .then((res) => {\r\n        setData(res.data);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  if (dataIngridients.length < 1) return null;\r\n\r\n  return (\r\n    <>\r\n      <AppHeader setClickOrderList={setClickOrderList} setIsOpen={setIsOpen} />\r\n      <AppMain\r\n        setClickIngridient={setClickIngridient}\r\n        setIsOpen={setIsOpen}\r\n        setImageIngridient={setImageIngridient}\r\n        ingridients={dataIngridients}\r\n      />\r\n\r\n      {isModalOpen && (\r\n        <>\r\n          {childForModal()}\r\n          <ModalOverlay\r\n            setClickOrderList={setClickOrderList}\r\n            setIsOpen={setIsOpen}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nAppMain.propTypes = {\r\n  ingridients: PropTypes.arrayOf(ingridientPropType),\r\n};*/\r\n\r\nexport default App;\r\n\r\n\r\n\r\n","C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\modal\\modal.jsx",["107"],[],"import React from 'react';\r\nimport styles from './modal.module.css';\r\nimport ReactDom  from 'react-dom';\r\n\r\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nconst modalRoot = document.getElementById('react-modal')\r\n\r\nfunction Modal({ setIsOpen, children }) {\r\n  \r\n  React.useEffect(() => {\r\n    function onEsc(event) {\r\n      if (event.code === 'Escape') {\r\n        setIsOpen(false)\r\n      }\r\n    }\r\n    document.addEventListener('keydown', onEsc);\r\n\r\n    return () => document.removeEventListener('keydown', onEsc)\r\n  }, [])\r\n  \r\n  const onClick = () => {\r\n    setIsOpen(false)\r\n  }\r\n\r\n  return ReactDom.createPortal(\r\n    (\r\n      <div className={styles.modal}>\r\n          <div className={styles.close_icon}>\r\n            <CloseIcon onClick={onClick}/>\r\n          </div>\r\n        {children}\r\n      </div>\r\n    ), modalRoot\r\n  )\r\n}\r\n\r\nexport default Modal",[],"C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\utils\\prop-types.js",[],[],"C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\header\\app-header\\app-header.jsx",[],[],"C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\header\\header-list\\header-list.jsx",["108","109","110","111"],[],"import React from \"react\";\r\nimport styles from \"./header-list.module.css\";\r\n\r\nimport { BurgerIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { ListIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Logo } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { ProfileIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\nfunction HeaderList({ setClickOrderList, setIsOpen }) {\r\n  const onClick = () => {\r\n    setIsOpen(true);\r\n    setClickOrderList(true);\r\n  };\r\n\r\n  return (\r\n    <nav className={styles.header_menu}>\r\n      <ul className={styles.linkList_childItem}>\r\n        <li className={styles.linkList_item}>\r\n          <a className={styles.header_link}>\r\n            <BurgerIcon type=\"primary\" />\r\n            <p>Конструктор</p>\r\n          </a>\r\n        </li>\r\n\r\n        <li className={styles.linkList_item}>\r\n          <a className={styles.header_link}>\r\n            <ListIcon type=\"primary\" />\r\n            <span className=\"pl-2 text_type_main-default\" onClick={onClick}>\r\n              Лента заказов\r\n            </span>\r\n          </a>\r\n        </li>\r\n\r\n        <li className={styles.linkList_item}>\r\n          <a>\r\n            <Logo />\r\n          </a>\r\n        </li>\r\n\r\n        <li className={styles.linkList_item}>\r\n          <a className={styles.header_link}>\r\n            <ProfileIcon type=\"primary\" />\r\n            <p className=\"pl-2 text_type_main-default\">Личный кабинет</p>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default HeaderList;\r\n","C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\main\\app-main\\app-main.jsx",["112"],[],"import React from \"react\";\r\nimport styles from './app-main.module.css';\r\n\r\nimport BurgerIngridientTab from \"../BurgerIngredients/burger-ingridient-tab/burger-ingridient-tab\";\r\nimport BurgerConstructorAll from \"../BurgerConstructor/burger-constructor-all/burger-constructor-all\";\r\nimport BurgerConstructor\r\n\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeTypeTab } from \"../../../services/store/reducers/ingridientsTab\";\r\n\r\nfunction AppMain() {\r\n  const dispatch = useDispatch();\r\n\r\n  const bunRef = useRef(null);\r\n  const sauceRef = useRef(null);\r\n  const mainRef = useRef(null);\r\n\r\n  const current = useSelector((state) => state.ingridientsTab.typeTab);\r\n\r\n  function handleTabClick(type) {\r\n    dispatch(changeTypeTab(type));\r\n\r\n    switch (type) {\r\n      case \"bun\":\r\n        bunRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n        break;\r\n\r\n      case \"sauce\":\r\n        sauceRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n        break;\r\n\r\n      case \"main\":\r\n        mainRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  function handleTab(evt) {\r\n    const target = evt.target;\r\n    const scrollTop = target.scrollTop;\r\n    const sauceScroll =\r\n      sauceRef.current.getBoundingClientRect().y -\r\n      bunRef.current.getBoundingClientRect().y -\r\n      40;\r\n    const mainScroll =\r\n      mainRef.current.getBoundingClientRect().y -\r\n      bunRef.current.getBoundingClientRect().y -\r\n      40;\r\n\r\n    if (scrollTop >= mainScroll) {\r\n      dispatch(changeTypeTab(\"main\"));\r\n    } else if (scrollTop < sauceScroll) {\r\n      dispatch(changeTypeTab(\"bun\"));\r\n    } else {\r\n      dispatch(changeTypeTab(\"sauce\"));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main className={styles.main}>\r\n      <section>\r\n        <BurgerIngridientTab\r\n          current={current}\r\n          handleTabClick={handleTabClick}\r\n        />\r\n\r\n        <div\r\n          className={styles.main_ingredientBlock + \" custom-scroll\"}\r\n          onScroll={handleTab}\r\n        >\r\n          <div ref={bunRef}>\r\n            <BurgerIngridients productName={\"Булки\"} typeProduct={\"bun\"} />\r\n          </div>\r\n          <div ref={sauceRef}>\r\n            <BurgerIngridients productName={\"Соусы\"} typeProduct={\"sauce\"} />\r\n          </div>\r\n          <div ref={mainRef}>\r\n            <BurgerIngridients productName={\"Начинки\"} typeProduct={\"main\"} />\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <section className={\"pt-25\"}>\r\n        <BurgerConstructor index={0} />\r\n        <BurgerConstructorAll name={\"Оформить заказ\"} />\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\n/*function AppMain({setClickIngridient, setIsOpen, setImageIngridient, ingridients}) {\r\n    return (\r\n      <main className={styles.main}>\r\n        \r\n        <section >\r\n          <BurgerIngridientTab/>\r\n          <div className={styles.main_ingridientBlock + \" custom-scroll\"}>\r\n            <BurgerIngridientHead \r\n            setIsOpen={setIsOpen} setClickIngridient={setClickIngridient} \r\n            setImageIngridient={setImageIngridient} ingridients={ingridients} \r\n            productName={\"Булки\"} typeProduct={\"bun\"} />\r\n            <BurgerIngridientHead \r\n            setIsOpen={setIsOpen} setClickIngridient={setClickIngridient} \r\n            setImageIngridient={setImageIngridient} ingridients={ingridients} \r\n            productName={\"Соусы\"} typeProduct={\"sauce\"} />\r\n            <BurgerIngridientHead \r\n            setIsOpen={setIsOpen} setClickIngridient={setClickIngridient} \r\n            setImageIngridient={setImageIngridient} ingridients={ingridients} \r\n            productName={\"Начинки\"} typeProduct={\"main\"} />\r\n          </div>\r\n  \r\n        </section>  \r\n        <section className={styles.main_constructorBlock +' pt-25 pl-4'}>\r\n          <BurgerConstructorTop ingridient={ingridients} index={0} />\r\n            <div className={styles.main_constructorMidleBlock + \" custom-scroll pr-2\"}>\r\n              <BurgerConstructorMiddle ingridient={ingridients}/>\r\n            </div>\r\n          <BurgerConstructorBottom ingridient={ingridients} index={0} />\r\n          <BurgerConstructorAll ingridients={ingridients} name={ \"Оформить заказ\" } />\r\n        </section>\r\n    </main>\r\n    )\r\n  }\r\n  \r\n  AppMain.propTypes = {\r\n    ingridients: PropTypes.arrayOf(ingridientPropType),\r\n    setClickIngridient: PropTypes.func,\r\n    setIsOpen: PropTypes.func,\r\n    setImageIngridient: PropTypes.func,\r\n  }*/\r\n\r\n  export default AppMain","C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\main\\BurgerConstructor\\burger-constructor-all\\burger-constructor-all.jsx",[],[],"C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\main\\BurgerConstructor\\burger-constructor.jsx",["113"],[],"import React from 'react';\r\nimport styles from './burger-constructor.module.css';\r\n\r\nimport { DragIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { ConstructorElement } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nfunction BurgerConstructorTop(ingridient) {\r\n    return (\r\n        <div className={'pl-6 pt-4 pb-4'} style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>\r\n          <ConstructorElement\r\n            type=\"top\"\r\n            isLocked={true}\r\n            text=\"Краторная булка N-200i (верх)\"\r\n            price={'1255'}\r\n            thumbnail={ingridient.image}\r\n          />\r\n        </div>\r\n      )\r\n  }\r\n  \r\n  function BurgerConstructorMiddle({ingridient}) {\r\n    return (\r\n      <div style={{ display: 'flex', flexDirection: 'column', gap: '16px'}}>\r\n          {ingridient.map((item) => {\r\n            return (\r\n              <div key={item._id} style={{ display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\r\n                <DragIcon/>\r\n                <ConstructorElement\r\n                  text={item.name}\r\n                  price={item.price}\r\n                  thumbnail={item.image_mobile}\r\n                />\r\n              </div>\r\n            )\r\n            })\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  function BurgerConstructorBottom({ingridient}) {\r\n    return (\r\n      <div className={\"pl-6 pt-4\"} style={{ display: 'flex', flexDirection: 'column', gap: '10px'}} >\r\n        <ConstructorElement\r\n          type=\"bottom\"\r\n          isLocked={true}\r\n          text=\"Краторная булка N-200i (низ)\"\r\n          price={200}\r\n          thumbnail={ingridient.image}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  \r\n    \r\n  export {BurgerConstructorTop, BurgerConstructorMiddle, BurgerConstructorBottom}","C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\main\\BurgerIngredients\\burger-ingridient\\burger-ingridient.jsx",["114","115"],[],"C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\main\\BurgerIngredients\\burger-ingridient-head\\burger-ingridient-head.jsx",[],[],"C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\main\\BurgerIngredients\\burger-ingridient-tab\\burger-ingridient-tab.jsx",["116"],[],"import React from 'react';\r\nimport styles from './burger-ingridient-tab.module.css';\r\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nfunction BurgerIngridientTab() {\r\n\r\n    const [current, setCurrent] = React.useState('one')\r\n\r\n    return (\r\n     <>\r\n        <h1 className={styles.main_title + \" text_type_main-large\" + ' pt-10 pb-5'}>\r\n        Соберите бургер\r\n        </h1>\r\n\r\n        <div style={{ display: 'flex' }} className={'pb-10'}>\r\n        <Tab value=\"Булки\" active={current === 'Булки'} onClick={setCurrent}>\r\n        Булки\r\n        </Tab>\r\n        <Tab value=\"Соусы\" active={current === 'Соусы'} onClick={setCurrent}>\r\n        Соусы\r\n        </Tab>\r\n        <Tab value=\"Начинки\" active={current === 'Начинки'} onClick={setCurrent}>\r\n        Начинки\r\n        </Tab>\r\n        </div>\r\n     </>\r\n    )\r\n}\r\n\r\nexport default BurgerIngridientTab","C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\modal\\ingridient-details\\ingridient-details.jsx",["117","118"],[],"import React from 'react';\r\nimport styles from './ingridient-details.module.css'\r\nimport { string } from 'prop-types';\r\nimport image from '../../../images/done.svg';\r\n\r\nfunction IngridientDetails({ imageIngridient }) {\r\n  console.log(imageIngridient)\r\n  return (\r\n    <>\r\n      <div className={styles.ingridient + ' pt-30'}>\r\n      <p className={styles.ingridient_title + \" text_type_main-large pt-10 pl-10\"}>Детали ингредиента</p>\r\n      <img src={`${imageIngridient.image_large}`} alt=\"\"/>\r\n      <p className={styles.text + \" text_type_main-medium pt-4\"}>{imageIngridient.name}</p>\r\n      <ul className={styles.table + \" pt-8\"}>\r\n          <li><p className={styles.text + \" text_type_main-default text_color_inactive\"}>Калории,ккал</p>\r\n          <p className={styles.text + \" text_type_main-default text_color_inactive pt-4\"}>{imageIngridient.calories}</p>\r\n          </li>    \r\n          <li><p className={styles.text + \" text_type_main-default text_color_inactive\"}>Белки, г</p>\r\n          <p className={styles.text + \" text_type_main-default text_color_inactive pt-4\"}>{imageIngridient.proteins}</p>\r\n          </li>    \r\n          <li><p className={styles.text + \" text_type_main-default text_color_inactive\"}>Жиры, г</p>\r\n          <p className={styles.text + \" text_type_main-default text_color_inactive pt-4\"}>{imageIngridient.fat}</p>\r\n          </li>    \r\n          <li><p className={styles.text + \" text_type_main-default text_color_inactive\"}>Углеводы, г</p>\r\n            <p className={styles.text + \" text_type_main-default text_color_inactive pt-4\"}>{imageIngridient.carbohydrates}</p>\r\n          </li>    \r\n      </ul>\r\n    </div>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default IngridientDetails","C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\modal\\order-details\\order-details.jsx",[],[],"C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\modal-overlay\\modal-overlay.jsx",["119","120"],[],"import React from 'react';\r\nimport styles from './modal-overlay.module.css'\r\nimport ReactDom  from 'react-dom';\r\n\r\nconst overlayRoot = document.getElementById('react-modal')\r\n\r\nfunction ModalOverlay({setClickOrderList, setIsOpen}) {\r\n\r\n  const onClick = () => {\r\n    setIsOpen(false)\r\n    setClickOrderList(false)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.overlay} onClick={onClick}></div>\r\n  )\r\n}\r\n\r\nexport default ModalOverlay","C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\utils\\data.js",[],[],"C:\\Users\\Nailusha\\Desktop\\yandex-dev\\react-stellar-burger\\src\\components\\preloder\\preloder.jsx",[],[],{"ruleId":"121","severity":1,"message":"122","line":1,"column":8,"nodeType":"123","messageId":"124","endLine":1,"endColumn":14},{"ruleId":"121","severity":1,"message":"125","line":9,"column":8,"nodeType":"123","messageId":"124","endLine":9,"endColumn":20},{"ruleId":"121","severity":1,"message":"126","line":19,"column":20,"nodeType":"123","messageId":"124","endLine":19,"endColumn":31},{"ruleId":"121","severity":1,"message":"127","line":21,"column":11,"nodeType":"123","messageId":"124","endLine":21,"endColumn":28},{"ruleId":"128","severity":1,"message":"129","line":44,"column":6,"nodeType":"130","endLine":44,"endColumn":8,"suggestions":"131"},{"ruleId":"128","severity":1,"message":"132","line":20,"column":6,"nodeType":"130","endLine":20,"endColumn":8,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":19,"column":11,"nodeType":"136","endLine":19,"endColumn":45},{"ruleId":"134","severity":1,"message":"135","line":26,"column":11,"nodeType":"136","endLine":26,"endColumn":45},{"ruleId":"134","severity":1,"message":"135","line":35,"column":11,"nodeType":"136","endLine":35,"endColumn":14},{"ruleId":"134","severity":1,"message":"135","line":41,"column":11,"nodeType":"136","endLine":41,"endColumn":45},{"ruleId":null,"fatal":true,"severity":2,"message":"137","line":8,"column":0},{"ruleId":"121","severity":1,"message":"122","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":14},{"ruleId":"121","severity":1,"message":"138","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":13},{"ruleId":"139","severity":1,"message":"140","line":20,"column":13,"nodeType":"136","endLine":20,"endColumn":85},{"ruleId":"141","severity":1,"message":"142","line":11,"column":68,"nodeType":"143","messageId":"144","endLine":11,"endColumn":69},{"ruleId":"121","severity":1,"message":"145","line":3,"column":10,"nodeType":"123","messageId":"124","endLine":3,"endColumn":16},{"ruleId":"121","severity":1,"message":"138","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":13},{"ruleId":"121","severity":1,"message":"146","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":16},{"ruleId":"121","severity":1,"message":"147","line":5,"column":7,"nodeType":"123","messageId":"124","endLine":5,"endColumn":18},"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","'ModalOverlay' is defined but never used.","'setIsLoding' is assigned a value but never used.","'setClickOrderList' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["148"],"React Hook React.useEffect has a missing dependency: 'setIsOpen'. Either include it or remove the dependency array. If 'setIsOpen' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["149"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","Parsing error: Unexpected token, expected \"from\" (8:0)","'image' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'string' is defined but never used.","'ReactDom' is defined but never used.","'overlayRoot' is assigned a value but never used.",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [dispatch]",{"range":"154","text":"155"},"Update the dependencies array to be: [setIsOpen]",{"range":"156","text":"157"},[1494,1496],"[dispatch]",[556,558],"[setIsOpen]"]